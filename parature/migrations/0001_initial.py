# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-28 23:43
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('alternate_phone', models.TextField(blank=True, null=True)),
                ('building', models.TextField(blank=True, null=True)),
                ('cell_phone', models.TextField(blank=True, null=True)),
                ('class_year', models.TextField(blank=True, null=True)),
                ('customer_feedback', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('date_modified', models.DateTimeField(blank=True, null=True)),
                ('department', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('find_group', models.TextField(blank=True, null=True)),
                ('first_name', models.TextField(blank=True, null=True)),
                ('home_office', models.TextField(blank=True, null=True)),
                ('klp_participant', models.TextField(blank=True, null=True)),
                ('last_name', models.TextField(blank=True, null=True)),
                ('netid', models.TextField(blank=True, null=True)),
                ('office_media', models.TextField(blank=True, null=True)),
                ('password', models.TextField(blank=True, null=True)),
                ('password_confirm', models.TextField(blank=True, null=True)),
                ('preferred_number', models.TextField(blank=True, null=True)),
                ('program', models.TextField(blank=True, null=True)),
                ('receive_email_updates_for_tickets', models.TextField(blank=True, null=True)),
                ('retiredcustomerfielddonotuse01', models.TextField(blank=True, null=True)),
                ('retiredcustomerfielddonotuse02', models.TextField(blank=True, null=True)),
                ('room', models.TextField(blank=True, null=True)),
                ('section_number', models.TextField(blank=True, null=True)),
                ('service_level_agreement', models.TextField(blank=True, null=True)),
                ('signed_tsa', models.TextField(blank=True, null=True)),
                ('signed_tsa_date', models.TextField(blank=True, null=True)),
                ('special_interest', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('customerid', models.IntegerField(blank=True, null=True, unique=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketDetails',
            fields=[
                ('app_tag_or_name', models.TextField(blank=True, null=True)),
                ('contact_name', models.TextField(blank=True, null=True)),
                ('customer_service', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('extra_action', models.TextField(blank=True, null=True)),
                ('faculty_netid', models.TextField(blank=True, null=True)),
                ('known_error_notes_and_workaround', models.TextField(blank=True, null=True)),
                ('loaner_purpose', models.TextField(blank=True, null=True)),
                ('operating_system', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('overall', models.TextField(blank=True, null=True)),
                ('pilot_or_project', models.TextField(blank=True, null=True)),
                ('priority', models.TextField(blank=True, null=True)),
                ('problem_analysis', models.TextField(blank=True, null=True)),
                ('problem_flags', models.TextField(blank=True, null=True)),
                ('resolution', models.TextField(blank=True, null=True)),
                ('room_or_area', models.TextField(blank=True, null=True)),
                ('service', models.TextField(blank=True, null=True)),
                ('service_detail', models.TextField(blank=True, null=True)),
                ('service_family', models.TextField(blank=True, null=True)),
                ('solution', models.TextField(blank=True, null=True)),
                ('student_migration_tracker', models.TextField(blank=True, null=True)),
                ('submitted_by', models.TextField(blank=True, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('supported', models.TextField(blank=True, null=True)),
                ('ticket_product', models.TextField(blank=True, null=True)),
                ('technical_support', models.TextField(blank=True, null=True)),
                ('ticket_location', models.TextField(blank=True, null=True)),
                ('ticket_origin', models.TextField(blank=True, null=True)),
                ('ticket_request_type', models.TextField(blank=True, null=True)),
                ('timeliness', models.TextField(blank=True, null=True)),
                ('accountname', models.TextField(blank=True, null=True)),
                ('amid', models.TextField(blank=True, null=True)),
                ('assignedto', models.TextField(blank=True, null=True)),
                ('createdby', models.TextField(blank=True, null=True)),
                ('customeremail', models.TextField(blank=True, null=True)),
                ('datecreated', models.DateTimeField(blank=True, null=True)),
                ('dateupdated', models.DateTimeField(blank=True, null=True)),
                ('hoursspent', models.TextField(blank=True, null=True)),
                ('sla', models.TextField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('ticketid', models.IntegerField(blank=True, null=True, unique=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ticket_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketHistory',
            fields=[
                ('action_date', models.DateTimeField(blank=True, null=True)),
                ('action_name', models.TextField(blank=True, null=True)),
                ('assigned_to_csr', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('performed_by_csr', models.TextField(blank=True, null=True)),
                ('time_spent', models.TextField(blank=True, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ticket_history',
                'managed': False,
            },
        ),
    ]
